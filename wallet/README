FILES

Your wallet contains your private keys and various transaction related metadata. It is stored in app-private
storage:

	Mainnet: /data/data/com.hivewallet.androidclient.wallet/files/wallet-protobuf (MODE_PRIVATE)

	Testnet: /data/data/com.hivewallet.androidclient.wallet_test/files/wallet-protobuf-testnet (MODE_WORLD_READABLE | MODE_WORLD_WRITEABLE)

The wallet file format is not compatible to wallet.dat (Satoshi client). Rather, it uses a custom protobuf format
which should be compatible between clients using bitcoinj.

Certain actions cause automatic rolling backups of your wallet to app-private storage:

	Mainnet: /data/data/com.hivewallet.androidclient.wallet/files/key-backup-protobuf (MODE_PRIVATE)

	Testnet: /data/data/com.hivewallet.androidclient.wallet_test/files/key-backup-protobuf-testnet (MODE_PRIVATE)

Your wallet can be manually backed up to and restored from external storage:

	Mainnet: /sdcard/Download/bitcoin-wallet-backup-<yyyy-MM-dd>

	Testnet: /sdcard/Download/bitcoin-wallet-backup-testnet-<yyyy-MM-dd>

The manual backup files are encrypted using your chosen backup password. You can use OpenSSL to decrypt:

	openssl enc -d -aes-256-cbc -a -in <filename>


DEBUGGING

Wallet file for Testnet can be pulled from an (even un-rooted) device using

	adb pull /data/data/com.hivewallet.androidclient.wallet_test/files/wallet-protobuf-testnet

Log messages can be viewed by

	adb logcat

The app can send extensive debug information. Use Options > Settings > Report Issue and follow the dialog.
In the generated e-mail, replace the support address with yours.


BUILDING THE DEVELOPMENT VERSION

See top-level README.


BUILDING THE PRODUCTIVE VERSION

See top-level README


SETTING UP FOR DEVELOPMENT

See top-level README


TRANSLATIONS

The source language is English. Translations for all languages except German happen on Transifex:

	https://www.transifex.com/projects/p/bitcoin-wallet/

The english resources are pushed to Transifex. Changes are pulled and committed to the git
repository from time to time. It can be done by manually downloading the files, but using the "tx"
command line client is more convenient:

	# first time only
	sudo apt-get install transifex-client

If strings resources are added or changed, the source language files need to be pushed to
Transifex. This step will probably only be executed by the maintainer of the project, as special
permission is needed:

	# push source files to Transifex
	tx push -s

As soon as a translation is ready, it can be pulled:

	# pull translation from Transifex
	tx pull -f -l <language code>

Note that after pulling, any bugs introduced by either translators or Transifex itself need to be
corrected manually.


NFC (Near field communication)

Bitcoin Wallet supports reading Bitcoin requests via NFC, either from a passive NFC tag or from
another NFC capable Android device that is requesting coins.

For this to work, just enable NFC in your phone and hold your phone to the tag or device (with
the "Request coins" dialog open). The "Send coins" dialog will open with fields populated.

Instructions for preparing an NFC tag with your address:

- We have successfully tested this NFC tag writer:
  https://play.google.com/store/apps/details?id=com.nxp.nfc.tagwriter
  Other writers should work as well, let us know if you succeed.

- Some tags have less than 50 bytes capacity, those won't work. 1 KB tags recommended.

- The tag needs to contain a Bitcoin URI. You can construct one with the "Request coins" dialog,
  then share with messaging or email. You can also construct the URI manually. Example for Mainnet:
  bitcoin:1G2Y2jP5YFZ5RGk2PXaeWwbeA5y1ZtFhoL

- The type of the message needs to be URI or URL (not Text).

- If you put your tag at a public place, don't forget to enable write protect. Otherwise, someone
  could overwrite the tag with his own Bitcoin address.


EXCHANGE RATES

Bitcoin Wallet reads this feed from "bitcoin charts" for getting exchange rates:

	http://bitcoincharts.com/t/weighted_prices.json

The feed is described on this page (see Weighted Prices):

	http://bitcoincharts.com/about/markets-api/

I chose this feed because it is not dependent on a single exchange. However, you should keep in
mind it's always a 24h average (falling back to 7d or even 30d if no trade occurred for a long
time).

If Bitcoincharts is not available, the feed from "Blockchain" is fetched instead:

	https://blockchain.info/ticker

The feed is described here:

	https://blockchain.info/api/exchange_rates_api


BITCOINJ

Bitcoin Wallet uses bitcoinj for Bitcoin specific logic:

http://code.google.com/p/bitcoinj/
